{
  "$schema": "https://biomejs.dev/schemas/2.1.3/schema.json",
  "files": {
    "includes": [
      "**/*.ts",
      "**/*.tsx",
      "**/*.js",
      "**/package.json",
      "**/tsconfig.json",
      "!**/*.d.ts",
      "!**/node_modules",
      "!**/dist"
    ]
  },
  "assist": {
    "actions": {
      "source": {
        "organizeImports": "on"
      }
    }
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "correctness": {
        "noUnusedImports": "error",
        "noUnusedVariables": "error",
        "noUnusedFunctionParameters": "error"
      },
      "suspicious": {
        "noReactSpecificProps": "error"
      },
      "style": {
        "noNamespace": "error",
        "noYodaExpression": "error",
        "useConsistentArrayType": {
          "level": "error",
          "options": {
            "syntax": "shorthand"
          }
        },
        "useNamingConvention": {
          "level": "error",
          "options": {
            "requireAscii": true
          }
        },
        "useLiteralEnumMembers": "error",
        "useNodejsImportProtocol": "error",
        "useAsConstAssertion": "error",
        "useEnumInitializers": "error",
        "useSelfClosingElements": "error",
        "useConst": "error",
        "useSingleVarDeclarator": "error",
        "noUnusedTemplateLiteral": "error",
        "useNumberNamespace": "error",
        "noInferrableTypes": "error",
        "useExponentiationOperator": "error",
        "useTemplate": "error",
        "noParameterAssign": "error",
        "noNonNullAssertion": "error",
        "useDefaultParameterLast": "error",
        "useImportType": "error",
        "useExportType": "error",
        "noUselessElse": "error",
        "useShorthandFunctionType": "error"
      },
      "nursery": {
        "useSortedClasses": "error",
        "noAwaitInLoop": "error"
      },
      "complexity": {
        "noCommaOperator": "error",
        "useNumericLiterals": "error",
        "noArguments": "error"
      }
    }
  },
  "formatter": {
    "indentStyle": "space",
    "indentWidth": 4
  },
  "json": {
    "formatter": {
      "indentStyle": "space",
      "indentWidth": 2
    }
  }
}
